[{"__symbolic":"module","version":4,"metadata":{"MinimalistParallax":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":1,"character":1},"arguments":[{"selector":"[minimalist-parallax]","template":"\n  <div class=\"over\">\n   <div class=\"bg\"  [ngStyle]=\"{'background-image': 'linear-gradient(to bottom, rgba(0,0,0,0.2) 0%, rgba(0,0,0,0.2) 100%), url()'}\">\n     <!-- <div class=\"child\">\n       <h2>{{ text optional }}</h2>  \n     </div> -->\n   </div>\n  </div>\n  ","styles":["\n  over {\n    overflow: hidden;\n    margin-bottom: 10px;\n  }\n  .bg{\n    background-size: cover;\n    background-position: center center;\n  }\n  .banner {\n    position: relative;\n    overflow: hidden;\n  }\n  .main-cnt{\n    width: 100%;\n    height: 70px;\n    overflow: hidden;\n    background-color: #efefef;\n  }\n  \n  .hgroup {\n    padding: 0 20px;\n    -webkit-box-pack: center;\n    -webkit-justify-content: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -webkit-flex-direction: column;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    height: 100%;\n    text-align: center;\n  }\n  h2 {\n    margin-top: 0;\n    margin-bottom: 4px;\n    color: white;\n    font-size: 4vw;\n    font-weight: 600;\n}\n  "],"host":{"(ionScroll)":"onContentScroll($event)","$quoted$":["(ionScroll)"]}}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":64,"character":14},{"__symbolic":"reference","module":"@angular/core","name":"Renderer","line":65,"character":15}]}],"ngAfterViewInit":[{"__symbolic":"method"}],"onContentScroll":[{"__symbolic":"method"}],"eventsManager":[{"__symbolic":"method"}],"fillScrollContent":[{"__symbolic":"method"}],"update":[{"__symbolic":"method"}],"isShowingInScreen":[{"__symbolic":"method"}],"formatImg":[{"__symbolic":"method"}]}}}}]